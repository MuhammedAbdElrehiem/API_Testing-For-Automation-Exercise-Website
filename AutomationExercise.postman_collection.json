{
	"info": {
		"_postman_id": "a63e7604-5371-4253-9e46-d63839b7ed22",
		"name": "Automation Exercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38361906"
	},
	"item": [
		{
			"name": "Get All Product List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{AutomationExerciseURL}}/productsList",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"productsList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post All Product List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This request method is not supported.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Gender\":\r\n        \"Male\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/productsList",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"productsList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Brands List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{AutomationExerciseURL}}/brandsList",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"brandsList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put To All Brands List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This request method is not supported.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": 2, \"brand\": \"PUtting\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/brandsList",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"brandsList"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Product without parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Bad request, search_product parameter is missing in POST request.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "search_product",
							"value": "top",
							"type": "text",
							"disabled": true
						},
						{
							"key": "search_product",
							"value": "{{Search_product}}",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/searchProduct",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"searchProduct"
					],
					"query": [
						{
							"key": "search_Product",
							"value": "top",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "search_product",
							"value": "{{Search_product}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/searchProduct",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"searchProduct"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST To Verify Login with valid details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User exists!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "mohamed.a.mahmoud65@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "01202151351aA",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/verifyLogin",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"verifyLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST To Verify Login without email parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Bad request, email or password parameter is missing in POST request.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "password",
							"value": "01202151351aA",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/verifyLogin",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"verifyLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE To Verify Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This request method is not supported.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AutomationExerciseURL}}/verifyLogin",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"verifyLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST To Verify Login with invalid details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User not found!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "ndlks@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/verifyLogin",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"verifyLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST To Create/Register User Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User created!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "mohame",
							"type": "text"
						},
						{
							"key": "email",
							"value": "gmail12345689@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456789",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Mr",
							"type": "text"
						},
						{
							"key": "birth_date",
							"value": "2",
							"type": "text"
						},
						{
							"key": "birth_month",
							"value": "2",
							"type": "text"
						},
						{
							"key": "birth_year",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "firstname",
							"value": "mohamed",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "ahmed",
							"type": "text"
						},
						{
							"key": "company",
							"value": "any",
							"type": "text"
						},
						{
							"key": "address1",
							"value": "any",
							"type": "text"
						},
						{
							"key": "address2",
							"value": "any",
							"type": "text"
						},
						{
							"key": "country",
							"value": "India",
							"type": "text"
						},
						{
							"key": "zipcode",
							"value": "1234",
							"type": "text"
						},
						{
							"key": "state",
							"value": "va",
							"type": "text"
						},
						{
							"key": "city",
							"value": "ma",
							"type": "text"
						},
						{
							"key": "mobile_number",
							"value": "123456789",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/createAccount",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"createAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT METHOD To Update User Account",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name ",
							"value": "mohamed",
							"type": "text"
						},
						{
							"key": "email",
							"value": "gmail12345689@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456789",
							"type": "text"
						},
						{
							"key": "title",
							"value": "Mrs",
							"type": "text"
						},
						{
							"key": "birth_date",
							"value": "",
							"type": "text"
						},
						{
							"key": "birth_month",
							"value": "",
							"type": "text"
						},
						{
							"key": "birth_year",
							"value": "",
							"type": "text"
						},
						{
							"key": "firstname",
							"value": "",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "",
							"type": "text"
						},
						{
							"key": "company",
							"value": "",
							"type": "text"
						},
						{
							"key": "address1",
							"value": "",
							"type": "text"
						},
						{
							"key": "address2",
							"value": "",
							"type": "text"
						},
						{
							"key": "country",
							"value": "",
							"type": "text"
						},
						{
							"key": "Zipcode",
							"value": "",
							"type": "text"
						},
						{
							"key": "state",
							"value": "",
							"type": "text"
						},
						{
							"key": "city",
							"value": "",
							"type": "text"
						},
						{
							"key": "mobile_number",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/updateAccount",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"updateAccount"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET user account detail by email",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/getUserDetailByEmail?email=gmail12345689@gmail.com",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"getUserDetailByEmail"
					],
					"query": [
						{
							"key": "email",
							"value": "gmail12345689@gmail.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE METHOD To Delete User Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Account deleted!\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "gmail12345689@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456789",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AutomationExerciseURL}}/deleteAccount",
					"host": [
						"{{AutomationExerciseURL}}"
					],
					"path": [
						"deleteAccount"
					]
				}
			},
			"response": []
		}
	]
}